//<RotatingCamera />

 function RotatingCamera() {
//   const scroll = useScroll()
//   useFrame((state) => {
//     const offset = scroll.offset
//     // Adjust these values to control the camera movement
//     const radius = 10
//     const angle = offset * Math.PI * 2 // Full rotation for the camera
//     state.camera.position.set(
//       Math.sin(angle) * radius,
//       2, // Height of the camera
//       Math.cos(angle) * radius
//     )
//     state.camera.lookAt(0, 0, 0) // Always look at the center
//   })
//   return null
// }




function MovingCamera() {
  const scroll = useScroll()
  useFrame((state) => {
    const offset = scroll.offset
    const startPosition = [0, 2, 10] // Initial position of the camera
    const endPosition = [0, 1, 2] // Final position of the camera near the object
    const t = offset / 1 // Normalize offset to range from 0 to 1 over one page of scrolling

    // Interpolate camera position between start and end positions
    const x = THREE.MathUtils.lerp(startPosition[0], endPosition[0], t)
    const y = THREE.MathUtils.lerp(startPosition[1], endPosition[1], t)
    const z = THREE.MathUtils.lerp(startPosition[2], endPosition[2], t)

    state.camera.position.set(x, y, z)
    state.camera.lookAt(0, 0, 0) // Always look at the center
  })
  return null
}